import random
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from datetime import datetime, timedelta
from config import BOT_TOKEN, ADMIN_ID
from utils.user_data import get_user_data, save_user_data

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_data = get_user_data(user_id)
    await update.message.reply_text(
        f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞—à –±–∞–ª–∞–Ω—Å: {user_data["balance"]} –º–æ–Ω–µ—Ç.'
    )

# –ö–æ–º–∞–Ω–¥–∞ /roulette
async def roulette(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_data = get_user_data(user_id)
    await update.message.reply_text('–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –î–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫–∏!')

# –ö–æ–º–∞–Ω–¥–∞ /log
async def log(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_data = get_user_data(user_id)
    if not user_data['log']:
        await update.message.reply_text('–ù–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∏–≥—Ä.')
    else:
        log_text = "\n".join(user_data['log'][-12:])
        await update.message.reply_text(f'–ü–æ—Å–ª–µ–¥–Ω–∏–µ 12 –∏–≥—Ä:\n{log_text}')

# –ö–æ–º–∞–Ω–¥–∞ /bet
async def bet(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_data = get_user_data(user_id)

    if user_data['balance'] < 1000:
        await update.message.reply_text('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–∞–≤–∫–∏ –≤ 1000!')
        return

    try:
        amount = int(context.args[0])
        bet_choice = context.args[1]

        if amount < 1000:
            await update.message.reply_text('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ 1000!')
            return

        if amount > user_data['balance']:
            await update.message.reply_text('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
            return

        user_data['balance'] -= amount
        save_user_data(user_id, user_data)
        await update.message.reply_text(f'–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ {amount} –Ω–∞ {bet_choice}. –£–¥–∞—á–∏!')
    except (IndexError, ValueError):
        await update.message.reply_text('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç–∞–≤–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /bet <—Å—É–º–º–∞> <—Å—Ç–∞–≤–∫–∞>.')

# –ö–æ–º–∞–Ω–¥–∞ /menu
async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    commands_list = """
üìú –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:
- /start: –ù–∞—á–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º
- /roulette: –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É
- /log: –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–≥—Ä—ã
- /bet <—Å—É–º–º–∞> <—Å—Ç–∞–≤–∫–∞>: –°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É
- /menu: –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é
    """
    await update.message.reply_text(commands_list)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    application = Application.builder().token(BOT_TOKEN).read_timeout(60).connect_timeout(60).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("roulette", roulette))
    application.add_handler(CommandHandler("log", log))
    application.add_handler(CommandHandler("bet", bet))
    application.add_handler(CommandHandler("menu", menu))
    application.run_polling()

if __name__ == "__main__":
    main()
